{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","contacts","onAddContact","useState","name","setName","number","setNumber","handleNameChange","evt","target","value","validateData","normalizedFilter","toLowerCase","msg","find","contact","alert","reset","onSubmit","preventDefault","className","s","form","label","input","type","placeholder","onChange","button","Filter","ContactList","onClick","filteredContacts","onGetVisibleContacts","map","filteredContact","index","id","App","key","defaultContacts","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","container","prevState","uuidv4","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73910242.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1k8wV\",\"label\":\"ContactForm_label__g2MhS\",\"input\":\"ContactForm_input__27zz4\",\"button\":\"ContactForm_button__3NeFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Filter_button__1jMo4\",\"input\":\"Filter_input__17L-z\",\"label\":\"Filter_label__3gPzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2NOj4\",\"App-logo\":\"App_App-logo__21yaK\",\"App-header\":\"App_App-header__ebAgO\",\"App-link\":\"App_App-link__3Iqk_\",\"container\":\"App_container__mqIfB\",\"App-logo-spin\":\"App_App-logo-spin__3Uvw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1mEab\"};","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\n\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ contacts, onAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(\"запускается UseEffect\");\n  //   window.localStorage.setItem(\"name\", JSON.stringify(name));\n  // }, [contacts]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    validateData();\n    reset();\n  };\n\n  const handleNameChange = (evt) => {\n    const { value, name } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const validateData = () => {\n    const normalizedFilter = name.toLowerCase();\n    const msg = contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedFilter\n    );\n\n    if (!name || !number) {\n      alert(\"Введите правильное имя и телефон\");\n      return;\n    }\n\n    if (msg) {\n      alert(\"Taкое имя уже есть\");\n      return;\n    } else {\n      onAddContact(name, number);\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter contact name\"\n          onChange={handleNameChange}\n        ></input>\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Enter contact number\"\n          onChange={handleNameChange}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\n// import PropTypes from \"prop-types\";\n// import { Component } from \"react\";\n\n// import s from \"./ContactForm.module.css\";\n\n// export default class ContactForm extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   handleSubmit = (evt) => {\n//     evt.preventDefault();\n//     console.log(this.state);\n//     console.log(evt);\n//     // this.props.onAddContact(this.state);\n//     this.validateData();\n\n//     this.reset();\n//   };\n\n//   validateData = () => {\n//     const { name, number } = this.state;\n//     const { contacts } = this.props;\n//     const normalizedFilter = name.toLowerCase();\n//     const msg = contacts.find(\n//       (contact) => contact.name.toLowerCase() === normalizedFilter\n//     );\n\n//     if (!name || !number) {\n//       alert(\"Введите правильное имя и телефон\");\n//       return;\n//     }\n\n//     if (msg) {\n//       alert(\"Taкое имя уже есть\");\n//       return;\n//     } else {\n//       this.props.onAddContact(this.state);\n//     }\n//   };\n\n//   handleNameChange = (evt) => {\n//     const { name, value } = evt.target;\n//     this.setState({\n//       [name]: value,\n//     });\n//     // console.log(name);\n//     // console.log(value);\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form onSubmit={this.handleSubmit} className={s.form}>\n//         <label className={s.label}>\n//           Name\n//           <input\n//             className={s.input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             placeholder=\"Enter contact name\"\n//             onChange={this.handleNameChange}\n//           ></input>\n//         </label>\n//         <label className={s.label}>\n//           Number\n//           <input\n//             className={s.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={number}\n//             placeholder=\"Enter contact number\"\n//             onChange={this.handleNameChange}\n//           ></input>\n//         </label>\n//         <button type=\"submit\" className={s.button}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   onAddContact: PropTypes.func.isRequired,\n//   contacts: PropTypes.array.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"string\"\n        name=\"filter\"\n        placeholder=\"Enter contact name to find\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ onClick, onGetVisibleContacts }) {\n  const filteredContacts = onGetVisibleContacts();\n  return (\n    <ul>\n      {filteredContacts &&\n        filteredContacts.map((filteredContact, index) => (\n          <li key={filteredContact.id}>\n            <p>\n              {filteredContact.name} {filteredContact.number}\n            </p>\n            <button\n              type=\"button\"\n              id={filteredContact.id}\n              onClick={onClick}\n              className={s.button}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onGetVisibleContacts: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport s from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nconst useLocalStorage = (key, defaultContacts) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultContacts;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default function App() {\n  const defaultContacts = [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ];\n\n  // const [contacts, setContacts] = useState(\n  //   () => JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defaultContacts\n  // );\n\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", defaultContacts);\n\n  const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(\"запускается UseEffect\");\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  const onAddContact = (name, number) => {\n    setContacts((prevState) => [...prevState, { id: uuidv4(), name, number }]);\n  };\n\n  const onFilter = (evt) => {\n    const { value } = evt.target;\n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (evt) => {\n    setContacts((prevState) => [\n      ...prevState.filter((contact) => contact.id !== evt.target.id),\n    ]);\n  };\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onAddContact={onAddContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={onFilter} />\n      <ContactList\n        onClick={deleteContact}\n        onGetVisibleContacts={getVisibleContacts}\n      />\n    </div>\n  );\n}\n\n// import { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// import s from \"./App.module.css\";\n// import ContactForm from \"./ContactForm/ContactForm\";\n// import Filter from \"./Filter/Filter\";\n// import ContactList from \"./ContactList/ContactList\";\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   onAddContact = ({ name, number }) => {\n//     console.log(name, number);\n//     const { contacts } = this.state;\n//     this.setState((prevState) => {\n//       return {\n//         contacts: [...prevState.contacts, { id: uuidv4(), name, number }],\n//       };\n//     });\n//     console.log(contacts);\n//   };\n\n//   onFilter = (evt) => {\n//     const { name, value } = evt.target;\n//     this.setState({\n//       [name]: value,\n//     });\n//     console.log(this.state.filter);\n//   };\n\n//   getVisibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     // console.log(contacts);\n\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normalizedFilter)\n//     );\n//   };\n\n//   deleteContact = (evt) => {\n//     console.log(evt.target.id);\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== evt.target.id\n//       ),\n//     }));\n//   };\n\n//   render() {\n//     const { filter, contacts } = this.state;\n//     // const filteredContacts = this.getVisibleContacts();\n//     // console.log(filteredContacts);\n//     return (\n//       <div className={s.container}>\n//         <h1>Phonebook</h1>\n//         <ContactForm contacts={contacts} onAddContact={this.onAddContact} />\n//         <h2>Contacts</h2>\n//         <Filter value={filter} onChange={this.onFilter} />\n//         <ContactList\n//           onClick={this.deleteContact}\n//           onGetVisibleContacts={this.getVisibleContacts}\n//         />\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}