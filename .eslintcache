[{"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\index.js":"1","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\App.js":"2","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\ContactForm\\ContactForm.js":"3","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\ContactList\\ContactList.js":"4","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\Filter\\Filter.js":"5","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\index.js":"6","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\App.js":"7","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\Filter\\Filter.js":"8","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\ContactForm\\ContactForm.js":"9","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\ContactList\\ContactList.js":"10"},{"size":220,"mtime":1607714403219,"results":"11","hashOfConfig":"12"},{"size":2104,"mtime":1608667943991,"results":"13","hashOfConfig":"12"},{"size":2172,"mtime":1608668554289,"results":"14","hashOfConfig":"12"},{"size":818,"mtime":1608681097745,"results":"15","hashOfConfig":"12"},{"size":521,"mtime":1608681097761,"results":"16","hashOfConfig":"12"},{"size":220,"mtime":1607714403219,"results":"17","hashOfConfig":"18"},{"size":5057,"mtime":1610454648112,"results":"19","hashOfConfig":"18"},{"size":521,"mtime":1608681097761,"results":"20","hashOfConfig":"18"},{"size":4588,"mtime":1610401716513,"results":"21","hashOfConfig":"18"},{"size":818,"mtime":1608681097745,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1m1hi73",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1pwduff",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\index.js",[],["46","47"],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\App.js",[],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\ContactForm\\ContactForm.js",[],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\ContactList\\ContactList.js",[],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-02-phonebook\\src\\Filter\\Filter.js",[],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\index.js",[],["48","49"],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\App.js",[],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\Filter\\Filter.js",[],"C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\ContactForm\\ContactForm.js",["50"],"import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\n\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ contacts, onAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(\"запускается UseEffect\");\n  //   window.localStorage.setItem(\"name\", JSON.stringify(name));\n  // }, [contacts]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    validateData();\n    reset();\n  };\n\n  const handleNameChange = (evt) => {\n    const { value, name } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const validateData = () => {\n    const normalizedFilter = name.toLowerCase();\n    const msg = contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedFilter\n    );\n\n    if (!name || !number) {\n      alert(\"Введите правильное имя и телефон\");\n      return;\n    }\n\n    if (msg) {\n      alert(\"Taкое имя уже есть\");\n      return;\n    } else {\n      onAddContact(name, number);\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter contact name\"\n          onChange={handleNameChange}\n        ></input>\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Enter contact number\"\n          onChange={handleNameChange}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\n// import PropTypes from \"prop-types\";\n// import { Component } from \"react\";\n\n// import s from \"./ContactForm.module.css\";\n\n// export default class ContactForm extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   handleSubmit = (evt) => {\n//     evt.preventDefault();\n//     console.log(this.state);\n//     console.log(evt);\n//     // this.props.onAddContact(this.state);\n//     this.validateData();\n\n//     this.reset();\n//   };\n\n//   validateData = () => {\n//     const { name, number } = this.state;\n//     const { contacts } = this.props;\n//     const normalizedFilter = name.toLowerCase();\n//     const msg = contacts.find(\n//       (contact) => contact.name.toLowerCase() === normalizedFilter\n//     );\n\n//     if (!name || !number) {\n//       alert(\"Введите правильное имя и телефон\");\n//       return;\n//     }\n\n//     if (msg) {\n//       alert(\"Taкое имя уже есть\");\n//       return;\n//     } else {\n//       this.props.onAddContact(this.state);\n//     }\n//   };\n\n//   handleNameChange = (evt) => {\n//     const { name, value } = evt.target;\n//     this.setState({\n//       [name]: value,\n//     });\n//     // console.log(name);\n//     // console.log(value);\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form onSubmit={this.handleSubmit} className={s.form}>\n//         <label className={s.label}>\n//           Name\n//           <input\n//             className={s.input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             placeholder=\"Enter contact name\"\n//             onChange={this.handleNameChange}\n//           ></input>\n//         </label>\n//         <label className={s.label}>\n//           Number\n//           <input\n//             className={s.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={number}\n//             placeholder=\"Enter contact number\"\n//             onChange={this.handleNameChange}\n//           ></input>\n//         </label>\n//         <button type=\"submit\" className={s.button}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   onAddContact: PropTypes.func.isRequired,\n//   contacts: PropTypes.array.isRequired,\n// };\n","C:\\Users\\Powerman\\Documents\\GitHub\\react\\goit-react-hw-04-hooks-phonebook\\src\\ContactList\\ContactList.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":20,"nodeType":"59","messageId":"60","endLine":2,"endColumn":29},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]